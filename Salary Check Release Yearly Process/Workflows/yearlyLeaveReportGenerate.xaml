<Activity mc:Ignorable="sap sap2010" x:Class="yearlyLeaveReportGenerate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bec="clr-namespace:BalaReva.Excel.Charts;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_sharepointUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_workfolderUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_downloadDataFolder" Type="InArgument(x:String)" />
    <x:Property Name="out_yearlyLeaveFilePath" Type="OutArgument(x:String)" />
  </x:Members>
  <this:yearlyLeaveReportGenerate.in_sharepointUrl>
    <InArgument x:TypeArguments="x:String" />
  </this:yearlyLeaveReportGenerate.in_sharepointUrl>
  <this:yearlyLeaveReportGenerate.in_sharepointUsername>
    <InArgument x:TypeArguments="x:String" />
  </this:yearlyLeaveReportGenerate.in_sharepointUsername>
  <this:yearlyLeaveReportGenerate.in_sharepointPassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:yearlyLeaveReportGenerate.in_sharepointPassword>
  <this:yearlyLeaveReportGenerate.in_workfolderUrl>
    <InArgument x:TypeArguments="x:String" />
  </this:yearlyLeaveReportGenerate.in_workfolderUrl>
  <this:yearlyLeaveReportGenerate.in_downloadDataFolder>
    <InArgument x:TypeArguments="x:String" />
  </this:yearlyLeaveReportGenerate.in_downloadDataFolder>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1424,4155</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>yearlyLeaveReportGenerate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>BalaReva.Excel.Charts</x:String>
      <x:String>BalaReva.Excel.Utilities</x:String>
      <x:String>BalaReva.Excel.Interfaces</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Utilities</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="yearlyLeaveReportGenerate" sap:VirtualizedContainerService.HintSize="850,4090" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_yearlyLeave" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workbook" />
      <Variable x:TypeArguments="s:String[]" Name="childrenNames" />
      <Variable x:TypeArguments="x:String" Name="itemUrl" />
      <Variable x:TypeArguments="s:String[]" Name="monthlyChildrenNames" />
      <Variable x:TypeArguments="x:String" Name="yearFolderPath" />
      <Variable x:TypeArguments="x:String" Name="year" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Yearly report generation started" sap:VirtualizedContainerService.HintSize="808,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Yearly leave report generation started&quot;]" />
    <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="808,3605" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[in_sharepointPassword]" SharePointInstanceType="Online" URL="[in_sharepointUrl]" UserName="[in_sharepointUsername]">
      <usa:SharepointApplicationScope.Body>
        <ActivityAction x:TypeArguments="us:SharePointContextInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - generate leave report" sap:VirtualizedContainerService.HintSize="774,3464" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - item url without shared documents" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[itemUrl]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Split(in_workfolderUrl,"/",2)(1)]</InArgument>
              </Assign.Value>
            </Assign>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[monthlyChildrenNames]" ChooseFile="False" DisplayName="Get children names - of monthly leave reports" sap:VirtualizedContainerService.HintSize="732,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_3" RelativeUrl="[String.Format(&quot;{0}\Monthly Leave Reports&quot;,in_workfolderUrl)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[now.ToString(&quot;MM&quot;).Equals(&quot;01&quot;)]" DisplayName="If - it is january month" sap:VirtualizedContainerService.HintSize="732,310" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Sequence DisplayName="Sequence - for previous year" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - previous year" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[now.AddYears(-1).ToString("yyyy")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence - for current year" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - current year" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[now.ToString("yyyy")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[monthlyChildrenNames.Contains(year)]" DisplayName="If - year folder exist under monthly leave folder" sap:VirtualizedContainerService.HintSize="732,341" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence DisplayName="Sequence - year folder exist in monthly folder" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message -  previous year folder exist in monthly folder" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Format(&quot;{0} folder exists under monthly leave folder&quot;,year)]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence -  year folder doesn't exist in monthly folder" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw DisplayName="Throw -BRE(&quot;Provided year folder doesn't exist in monthly leave folder&quot;)" Exception="[new BusinessRuleException(&quot;Provided year folder doesn't exist in monthly leave folder&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[childrenNames]" ChooseFile="False" DisplayName="Get children names - under workfolder" sap:VirtualizedContainerService.HintSize="732,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_4" RelativeUrl="[in_workfolderUrl]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[childrenNames.Contains(&quot;Yearly Leave Reports&quot;)]" DisplayName="If - yearly leave report folder exist or not" sap:VirtualizedContainerService.HintSize="732,354" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="Sequence - yearly leave report folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message - yearly leave report folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Yearly leave report folder exist&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence - yearly leave report folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,196" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - yearly leave folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_1" LibraryName="Documents" RelativeUrl="[Path.Combine(itemUrl,&quot;Yearly Leave Reports&quot;)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </Sequence>
              </If.Else>
            </If>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[childrenNames]" ChooseFile="False" DisplayName="Get children names - of yearly leave report folder" sap:VirtualizedContainerService.HintSize="732,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_5" RelativeUrl="[Path.Combine(in_workfolderUrl,&quot;Yearly Leave Reports&quot;)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[childrenNames.Contains(year)]" DisplayName="If - year folder exist" sap:VirtualizedContainerService.HintSize="732,354" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence DisplayName="Sequence - previous year folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message - previous year folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[String.Format(&quot;{0} folder exists&quot;,year)]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence - previous year folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,196" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - previous year" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_3" LibraryName="Documents" RelativeUrl="[String.Format(&quot;{0}\Yearly Leave Reports\{1}&quot;,itemUrl,year)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </Sequence>
              </If.Else>
            </If>
            <Assign DisplayName="Assign - path of previous year" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[YearFolderPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}\Monthly Leave Reports\{1}",in_workfolderUrl,year)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Downloads all monthly leave report file and generates total leave data table&#xA;1. in_YearFolderPath : Takes previous year folder path for downloading monthly reports&#xA;2. in_sharepointUrl : Takes sharepoint url for connection&#xA;3. in_sharepointUsername &amp; in_sharepointPasword : Takes share point username and password&#xA;4. in_downloadDataFolder : Takes local path for downloading reports&#xA;5. out_dt_totalExpense : Gives total expense data table&#xA;" DisplayName="Invoke GenerateLeaveDataTable workflow" sap:VirtualizedContainerService.HintSize="732,289" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\GenerateLeaveDataTable.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUrl">[in_sharepointUrl]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUsername">[in_sharepointUsername]</InArgument>
                <InArgument x:TypeArguments="ss:SecureString" x:Key="in_sharepointPassword">[in_sharepointPassword]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_downloadDataFolder">[in_downloadDataFolder]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_yearlyLeave">[dt_yearlyLeave]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_YearFolderPath">[YearFolderPath]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Assign - yearly leave file path" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_yearlyLeaveFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(in_downloadDataFolder,String.Format("Yearly_Leave_Details_{0}.xlsx",year))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - for yearly leave" sap:VirtualizedContainerService.HintSize="732,496" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[out_yearlyLeaveFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="487,387" sap2010:WorkflowViewState.IdRef="Sequence_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_yearlyLeave]" DisplayName="Write Range - yearly leave file" sap:VirtualizedContainerService.HintSize="445,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Yearly Leave" StartingCell="A1" />
                    <bec:ColumnChart ExecutionResult="{x:Null}" FilePassword="{x:Null}" ImageCopy="{x:Null}" LegendRange="{x:Null}" ModifyPassword="{x:Null}" CellRange="[String.Format(&quot;A1:C{0}&quot;,dt_yearlyLeave.RowCount+1)]" ChartTitle="Yearly Leave Report" ChartType="Column3DClustered" ContinueOnError="False" Delay="3" DisplayName="Column Chart - yearly excel chart" FilePath="[out_yearlyLeaveFilePath]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="ColumnChart_1" SheetName="[workbook.GetWorkbookSheet(0)]" ShowLegendKey="True" ShowValuePosition="OutsideEnd" ShowValueTextOrientation="Horizontal">
                      <bec:ColumnChart.Options>
                        <bec:ShowOptions AutoText="True" DataLabelsType="ShowPercent" HasLeaderLines="False" LegendKey="ShowLabel" Separator="" ShowBubbleSize="False" ShowCategoryName="False" ShowLegend="True" ShowPercentage="False" ShowSeriesName="False" ShowValue="True" />
                      </bec:ColumnChart.Options>
                      <bec:ColumnChart.Size>
                        <bec:ChartSize Height="300" Left="110" Top="110" Width="300" />
                      </bec:ColumnChart.Size>
                    </bec:ColumnChart>
                    <ui:ExcelCloseWorkbook DisplayName="Close Workbook - yearly excel" sap:VirtualizedContainerService.HintSize="445,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workbook]" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Highlights font wirth red color whose casual leave is highest&#xA;1. in_dt_yearlyLeave : Takes leave data table for finding highest leave&#xA;2. in_yearlyExcelFile : Takes yearly leave excel for highlighting font&#xA;" DisplayName="Invoke HighlightDepartmentWithHighestLeave workflow" sap:VirtualizedContainerService.HintSize="732,214" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\HighlightDepartmentWithHighestLeave.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_yearlyLeave">[dt_yearlyLeave]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_yearlyExcelFile">[out_yearlyLeaveFilePath]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file - yearly leave report" sap:VirtualizedContainerService.HintSize="732,104" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[out_yearlyLeaveFilePath]" LocalPathHintText="The current local path of the file" RelativeUrl="[String.Format(&quot;{0}\Yearly Leave Reports\{1}&quot;,in_workfolderUrl,year)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
          </Sequence>
        </ActivityAction>
      </usa:SharepointApplicationScope.Body>
    </usa:SharepointApplicationScope>
    <ui:LogMessage DisplayName="Log Message - yearly report generated successfully" sap:VirtualizedContainerService.HintSize="808,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Yearly Leave Report Generated and uploaded Successfully to the sharepoint&quot;]" />
    <ui:LogMessage DisplayName="Log Message - Yearly report generation completed" sap:VirtualizedContainerService.HintSize="808,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Yearly leave report generation completed&quot;]" />
  </Sequence>
</Activity>