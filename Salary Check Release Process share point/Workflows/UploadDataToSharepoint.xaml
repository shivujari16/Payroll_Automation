<Activity mc:Ignorable="sap sap2010" x:Class="UploadDataToSharepoint" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_departmentFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_workFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_sharepointPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_downloadDataPath" Type="InArgument(x:String)" />
    <x:Property Name="in_itemUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_monthlyLeaveExcel" Type="InArgument(x:String)" />
    <x:Property Name="in_MonthlySalaryExcel" Type="InArgument(x:String)" />
  </x:Members>
  <this:UploadDataToSharepoint.in_departmentFolderPath>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_departmentFolderPath>
  <this:UploadDataToSharepoint.in_workFolderPath>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_workFolderPath>
  <this:UploadDataToSharepoint.in_sharepointUrl>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_sharepointUrl>
  <this:UploadDataToSharepoint.in_sharepointUsername>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_sharepointUsername>
  <this:UploadDataToSharepoint.in_sharepointPassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:UploadDataToSharepoint.in_sharepointPassword>
  <this:UploadDataToSharepoint.in_downloadDataPath>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_downloadDataPath>
  <this:UploadDataToSharepoint.in_monthlyLeaveExcel>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_monthlyLeaveExcel>
  <this:UploadDataToSharepoint.in_MonthlySalaryExcel>
    <InArgument x:TypeArguments="x:String" />
  </this:UploadDataToSharepoint.in_MonthlySalaryExcel>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1424,4572</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>UploadDataToSharepoint_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="UploadDataToSharepoint" sap:VirtualizedContainerService.HintSize="926,4507" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="uploadLocation" />
      <Variable x:TypeArguments="s:String[]" Name="childrenNames" />
      <Variable x:TypeArguments="x:String" Name="departmentFullPath" />
      <Variable x:TypeArguments="x:String" Name="yearPath" />
      <Variable x:TypeArguments="x:String" Name="departmentFolderPath" />
      <Variable x:TypeArguments="s:String[]" Name="departmentChildrenNames" />
      <Variable x:TypeArguments="x:String" Name="monthlyName" />
      <Variable x:TypeArguments="x:String" Name="filepath" />
      <Variable x:TypeArguments="s:String[]" Name="yearChildrenNames" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Uploading data to sharepoint is started" sap:VirtualizedContainerService.HintSize="884,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Uploading data to sharepoint is started&quot;]" />
    <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="884,3959" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[in_sharepointPassword]" SharePointInstanceType="Online" URL="[in_sharepointUrl]" UserName="[in_sharepointUsername]">
      <usa:SharepointApplicationScope.Body>
        <ActivityAction x:TypeArguments="us:SharePointContextInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - upload department's data" sap:VirtualizedContainerService.HintSize="850,3818" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[childrenNames]" ChooseFile="False" DisplayName="Get children names - under main folder" sap:VirtualizedContainerService.HintSize="808,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_1" RelativeUrl="[in_workFolderPath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[childrenNames.Contains(&quot;Departments&quot;)]" DisplayName="If - department folder exist or not" sap:VirtualizedContainerService.HintSize="808,354" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Sequence - department folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message - department folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Department folder have already been created&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Sequence - department folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,196" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - department folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_1" LibraryName="Documents" RelativeUrl="[String.Format(&quot;{0}/Departments&quot;,in_itemUrl)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </Sequence>
              </If.Else>
            </If>
            <Assign DisplayName="Assign - department full path" sap:VirtualizedContainerService.HintSize="808,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[departmentFullPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(in_workFolderPath,"Departments")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachFolderX DisplayName="For Each Folder in Folder - departments " Folder="[in_departmentFolderPath]" sap:VirtualizedContainerService.HintSize="808,2524" sap2010:WorkflowViewState.IdRef="ForEachFolderX_1" IncludeSubFolders="False" OrderBy="NameAscFirst">
              <ui:ForEachFolderX.Body>
                <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="Folder" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do - Iterate through particular department folder " sap:VirtualizedContainerService.HintSize="774,2295" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[childrenNames]" ChooseFile="False" DisplayName="Get children names - under department folder" sap:VirtualizedContainerService.HintSize="732,69" sap2010:WorkflowViewState.IdRef="GetChildrenNames_2" RelativeUrl="[departmentFullPath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                    <Assign DisplayName="Assign - department folder path" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[departmentFolderPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Path.combine(in_itemUrl,"Departments")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[childrenNames.Contains(Folder.Name)]" DisplayName="If - particular department folder exist or not" sap:VirtualizedContainerService.HintSize="732,351" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Sequence - particular department folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message - particular department folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[String.Format(&quot;{0} folder have already been created&quot;,Folder.Name)]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Sequence - particular department folder not exist" sap:VirtualizedContainerService.HintSize="311,194" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - particular department folder" sap:VirtualizedContainerService.HintSize="269,102" sap2010:WorkflowViewState.IdRef="CreateFolder_2" LibraryName="Documents" RelativeUrl="[String.Format(&quot;{0}/{1}&quot;,departmentFolderPath,Folder.Name)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        </Sequence>
                      </If.Else>
                    </If>
                    <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[departmentChildrenNames]" ChooseFile="False" DisplayName="Get children names - under department" sap:VirtualizedContainerService.HintSize="732,69" sap2010:WorkflowViewState.IdRef="GetChildrenNames_3" RelativeUrl="[Path.combine(departmentFullPath,Folder.Name)]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                    <If Condition="[Now.ToString(&quot;MM&quot;).Equals(&quot;01&quot;)]" DisplayName="If - checking whether it is January or not" sap:VirtualizedContainerService.HintSize="732,51" sap2010:WorkflowViewState.IdRef="If_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Sequence - for December month" sap:VirtualizedContainerService.HintSize="774,743" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[departmentChildrenNames.Contains(now.AddYears(-1).ToString(&quot;yyyy&quot;))]" DisplayName="If - checking that previous year folder exist or not" sap:VirtualizedContainerService.HintSize="732,351" sap2010:WorkflowViewState.IdRef="If_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Sequence - previous year folder exists" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - previous year folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Format(&quot;{0} folder exist&quot;,now.AddYears(-1).ToString(&quot;yyyy&quot;))]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Sequence - previous year folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,194" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder  - previous year" sap:VirtualizedContainerService.HintSize="269,102" sap2010:WorkflowViewState.IdRef="CreateFolder_3" LibraryName="Documents" RelativeUrl="[String.Format(&quot;{0}/{1}/{2}&quot;,departmentFolderPath,Folder.Name,now.AddYears(-1).ToString(&quot;yyyy&quot;))]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Assign - previous year path" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[yearPath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/{2}",departmentFullPath,Folder.Name,now.AddYears(-1).ToString("yyyy"))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - month name" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[monthlyName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[MonthName(12)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - filepath of previouse year folder" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[filepath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Path.Combine(String.Format("{0}\{1}\{2}",departmentFolderPath,Folder.Name,Cint(now.ToString("yyyy"))-1),MonthName(12))]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Sequence - for Other month" sap:VirtualizedContainerService.HintSize="774,743" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[departmentChildrenNames.Contains(now.ToString(&quot;yyyy&quot;))]" DisplayName="If - checking whether current year folder exist or not" sap:VirtualizedContainerService.HintSize="732,351" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <Sequence DisplayName="Sequence - current year folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message - current year folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[String.Format(&quot;{0} folder exist&quot;,now.ToString(&quot;yyyy&quot;))]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Sequence - current year folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,194" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder  - current year" sap:VirtualizedContainerService.HintSize="269,102" sap2010:WorkflowViewState.IdRef="CreateFolder_4" LibraryName="Documents" RelativeUrl="[String.Format(&quot;{0}/{1}/{2}&quot;,departmentFolderPath,Folder.Name,now.ToString(&quot;yyyy&quot;))]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Assign - current year path" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[yearPath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/{2}",departmentFullPath,Folder.Name,now.ToString("yyyy"))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - previous month name" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[monthlyName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[MonthName(CInt(now.ToString("MM")) - 1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - filepath of folder" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[filepath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Path.Combine(String.Format("{0}\{1}\{2}",departmentFolderPath,Folder.Name,now.ToString("yyyy")),MonthName(CInt(now.ToString("MM")) - 1))]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[yearChildrenNames]" ChooseFile="False" DisplayName="Get children names - under year folder" sap:VirtualizedContainerService.HintSize="732,69" sap2010:WorkflowViewState.IdRef="GetChildrenNames_4" RelativeUrl="[yearPath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                    <If Condition="[yearChildrenNames.Contains(monthlyName)]" DisplayName="If - month folder exist" sap:VirtualizedContainerService.HintSize="732,351" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Sequence DisplayName="Sequence - month folder exist" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message  - month folder exist" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[String.Format(&quot;{0} month folder already been created&quot;,monthlyName)]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Sequence - month folder doesn't exist" sap:VirtualizedContainerService.HintSize="311,194" sap2010:WorkflowViewState.IdRef="Sequence_20">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create folder - month Name" sap:VirtualizedContainerService.HintSize="269,102" sap2010:WorkflowViewState.IdRef="CreateFolder_5" LibraryName="Documents" RelativeUrl="[filepath]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:ForEachFileX DisplayName="For Each File in Folder - department wise folder" Folder="[Path.Combine(in_departmentFolderPath,Folder.Name)]" sap:VirtualizedContainerService.HintSize="732,772" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="File" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do - upload files to sharepoint" sap:VirtualizedContainerService.HintSize="695,543" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[now.ToString(&quot;MM&quot;).Equals(&quot;01&quot;)]" DisplayName="If - checkig whether december month or not" sap:VirtualizedContainerService.HintSize="653,309" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Then>
                                <Sequence DisplayName="Sequence - December month" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - upload loaction for previous year" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[uploadLocation]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[String.Format("{0}\Departments\{1}\{2}\December",in_workFolderPath,Folder.Name,now.AddYears(-1).ToString("yyyy"))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Sequence - Other month" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - upload loaction for current year" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[uploadLocation]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[String.Format("{0}\Departments\{1}\{2}\{3}",in_workFolderPath,Folder.Name,now.ToString("yyyy"),MonthName(Cint(now.AddMonths(-1).ToString("MM"))))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file - cheques &amp; excel" sap:VirtualizedContainerService.HintSize="653,102" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[File.FullName]" LocalPathHintText="The current local path of the file" RelativeUrl="[uploadLocation]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                    </ui:ForEachFileX>
                    <ui:LogMessage DisplayName="Log Message - document uploaded" sap:VirtualizedContainerService.HintSize="732,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[String.Format(&quot;Cheques and excel file of {0} department is uploaded successfully to the sharepoint&quot;,Folder.Name)]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFolderX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachFolderX>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Uploads monthly salary report on sharepoint&#xA;1. in_workfolderPath : Takes workfolder path for uploading&#xA;2. in_sharepointUrl : Takes sharepoint url for connection&#xA;3. in_sharepointUsername &amp; in_sharepointPassword : takes sharepoint username and password&#xA;4. in_itemUrl : Takes url for uploading salary report&#xA;5. in_monthlySalaryExcel : Takes path of salary excel for uploading" DisplayName="Invoke UploadSalaryReport workflow" sap:VirtualizedContainerService.HintSize="808,259" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\UploadSalaryReport.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_workFolderPath">[in_workFolderPath]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUrl">[in_sharepointUrl]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUsername">[in_sharepointUsername]</InArgument>
                <InArgument x:TypeArguments="ss:SecureString" x:Key="in_sharepointPassword">[in_sharepointPassword]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_itemUrl">[in_itemUrl]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_MonthlySalaryExcel">[in_MonthlySalaryExcel]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Uploads monthly leave report on sharepoint&#xA;1. in_workfolderPath : Takes workfolder path for uploading&#xA;2. in_sharepointUrl : Takes sharepoint url for connection&#xA;3. in_sharepointUsername &amp; in_sharepointPassword : takes sharepoint username and password&#xA;4. in_itemUrl : Takes url for uploading leave report&#xA;5. in_monthlyLeaveExcel : Takes path of leave excel for uploading" DisplayName="Invoke UploadLeaveReport workflow" sap:VirtualizedContainerService.HintSize="808,259" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\UploadLeaveReport.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_itemUrl">[in_itemUrl]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUrl">[in_sharepointUrl]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_workFolderPath">[in_workFolderPath]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_monthlyLeaveExcel">[in_monthlyLeaveExcel]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_sharepointUsername">[in_sharepointUsername]</InArgument>
                <InArgument x:TypeArguments="ss:SecureString" x:Key="in_sharepointPassword">[in_sharepointPassword]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </usa:SharepointApplicationScope.Body>
    </usa:SharepointApplicationScope>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Deletes folder from local system&#xA;1. in_downloadDataPath : Takes local path for deleting" DisplayName="Invoke DeleteFoldersFromLocalSystem workflow" sap:VirtualizedContainerService.HintSize="884,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\DeleteFoldersFromLocalSystem.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_downloadDataPath">[in_downloadDataPath]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message - Uploading data to sharepoint is completed" sap:VirtualizedContainerService.HintSize="884,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Uploading data to sharepoint is completed&quot;]" />
  </Sequence>
</Activity>